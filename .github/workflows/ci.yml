name: CI

on:
  push:
    branches:
      - main
      - MS2  # Run on direct pushes to MS2
  pull_request:
    branches:
      - main  # Run on PRs targeting main
      - MS2   # Run on PRs targeting MS2

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --with dev

      - name: Run all unit tests
        env:
          OPENAI_API_KEY: "dummy-key-for-tests"  # Mocked tests don't use this
        run: |
          poetry run pytest tests/ -v --cov=src --cov-report=term-missing
      
      - name: Run MS2-specific tests
        env:
          OPENAI_API_KEY: "dummy-key-for-tests"
        run: |
          poetry run pytest tests/ms2/test_ms2.py -v --cov=src.ms2 --cov-report=term-missing

  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --with dev

      - name: Run pre-commit hooks
        run: |
          poetry run pre-commit run --all-files

      - name: Run mypy type checking
        env:
          OPENAI_API_KEY: "dummy-key-for-mypy"
        run: |
          poetry run mypy .

      - name: Run ruff linter
        run: |
          poetry run ruff check .

      - name: Check import sorting
        run: |
          poetry run isort --check-only .

  ms2-specific:
    name: MS2 Specific Checks
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' && 
      (github.base_ref == 'main' || github.base_ref == 'MS2')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --with dev

      - name: Run MS2 unit tests with coverage
        env:
          OPENAI_API_KEY: "dummy-key-for-tests"
        run: |
          poetry run pytest tests/ms2/test_ms2.py -v 

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ms2-coverage-report
          path: htmlcov/
          retention-days: 7

      - name: Check MS2 code quality
        run: |
          poetry run ruff check src/ms2/ tests/ms2/
          poetry run mypy src/ms2/
      
      - name: MS2 test summary
        if: always()
        run: |
          echo "âœ… MS2 Tests Completed!"
          echo "ðŸ“Š Check the coverage report artifact for details"
